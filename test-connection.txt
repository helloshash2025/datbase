const { Pool } = require('pg');
require('dotenv').config();

const pool = new Pool({
    user: process.env.DB_USER || 'postgres',
    host: process.env.DB_HOST || 'localhost',
    database: process.env.DB_NAME || 'postgres',
    password: process.env.DB_PASSWORD || 'root',
    port: parseInt(process.env.DB_PORT) || 25011,
    max: 20,
    idleTimeoutMillis: 30000,
    connectionTimeoutMillis: 5000,
});

async function testConnection() {
    console.log('üîç Testing PostgreSQL connection...');
    console.log(`üìç Connecting to: ${process.env.DB_HOST || 'localhost'}:${process.env.DB_PORT || 25011}`);
    console.log(`üë§ User: ${process.env.DB_USER || 'postgres'}`);
    console.log(`üóÑÔ∏è  Database: ${process.env.DB_NAME || 'postgres'}`);
    
    try {
        const client = await pool.connect();
        console.log('‚úÖ Successfully connected to PostgreSQL!');
        
        // Test basic query
        const result = await client.query('SELECT version(), current_database(), current_user');
        console.log('üìä Database Info:');
        console.log(`   Version: ${result.rows[0].version.split(' ').slice(0, 2).join(' ')}`);
        console.log(`   Database: ${result.rows[0].current_database}`);
        console.log(`   User: ${result.rows[0].current_user}`);
        
        // Check for pg_stat_statements
        const extResult = await client.query(`
            SELECT EXISTS(SELECT 1 FROM pg_extension WHERE extname = 'pg_stat_statements') as has_extension
        `);
        console.log(`üìà pg_stat_statements extension: ${extResult.rows[0].has_extension ? '‚úÖ Available' : '‚ùå Not installed'}`);
        
        // Check replication slots
        const slotsResult = await client.query('SELECT COUNT(*) as slot_count FROM pg_replication_slots');
        console.log(`üé∞ Replication slots: ${slotsResult.rows[0].slot_count}`);
        
        // Check publications
        const pubResult = await client.query('SELECT COUNT(*) as pub_count FROM pg_publication');
        console.log(`üì° Publications: ${pubResult.rows[0].pub_count}`);
        
        client.release();
        
        console.log('\nüéâ Database connection test completed successfully!');
        console.log('You can now start the monitoring server with: npm start');
        
    } catch (error) {
        console.error('‚ùå Connection failed:', error.message);
        console.log('\nüîß Troubleshooting:');
        console.log('1. Make sure PostgreSQL is running on port 25011');
        console.log('2. Verify the credentials in your .env file');
        console.log('3. Run the setup script: ./setup.ps1');
        console.log('4. Check if the database "postgres" exists');
        process.exit(1);
    } finally {
        await pool.end();
    }
}

testConnection();
